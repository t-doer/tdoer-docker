proxy_redirect             off;#代理重定向关闭
proxy_set_header           Host $host;#从header头中获取的主机名
proxy_set_header           X-Real-IP $remote_addr; #获取header头中获取的主机的真实IP
proxy_set_header           X-Forwarded-For   $proxy_add_x_forwarded_for; #获取header头中获取代理者的真实ip
proxy_hide_header          etag;  #设置服务响应头中含etag 的请求，不转发给客户端
add_header      via  n211  always;#添加
add_header      ori  $upstream_http_server always;
proxy_connect_timeout      120; #跟后台服务器连接超时时间发起握手等待响应超时时间
proxy_send_timeout         120; #后台服务器数据回传时间，就是在规定时间内后端服务器必须传完所有数据
proxy_read_timeout         120; #连接成功后，等待服务器响应时间，其实已经进入后端的排队之中等待处理
proxy_buffer_size          16k;#设置请求缓存区,这个缓存区会保存用户的头信息,以供nginx进行规则处理,一般只要能保存下头信息即可
proxy_buffers              4 128k; #告诉nginx保留单个用到几个Buffer最大用多少空间
proxy_busy_buffers_size    128k;  #代理忙碌时使用的缓冲区大小
proxy_temp_file_write_size 128k;  #缓存临时文件的大小
proxy_http_version         1.1 ;#启动Http1.1 协议向后端服务器发起请求,同时支持keep-alive;默认使用http1.0,不支持keep-alive
proxy_set_header Connection "" ;#设置请求头 Connection 为空串，默认是close，容易在后端服务器上生成Timewait
#proxy_next_upstream_tries  0；  #该配置决定了最多重试多少次,0表示不限制.建议如果设置的话,设置为大于0,防止读取第一个节点中间超时，
#                                继续下一个节点读取相同的数据，如果处理中没有考虑到重复数据的场景，就会发生数据多次重复插入！